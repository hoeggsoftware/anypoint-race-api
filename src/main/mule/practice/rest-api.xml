<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:referee-process-api="http://www.mulesoft.org/schema/mule/referee-process-api" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/referee-process-api http://www.mulesoft.org/schema/mule/referee-process-api/current/mule-referee-process-api.xsd">

	<flow name="practice_restapi_check" doc:id="9bbbc4b0-17bc-4bad-8b74-46dfffd0a105" >
		<vm:listener doc:name="practice-rest-api" doc:id="b235d514-2ccb-484c-adfe-c4539f577b0c" config-ref="VM_Config" queueName="practice-rest-api"/>
		<validation:is-true doc:name="not expired" doc:id="af77041b-9671-453d-9823-857471c72b93" expression="#[dw::app::Transforms::practiceExpiration(payload) &gt; now()]" message="expired race">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:EXPIRED" />
		</validation:is-true>
		<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	endpoint: payload.endpoint,&#10;	racerId: payload.racerId,&#10;	laps: payload.laps&#10;}]" doc:name="challengeRequest " doc:id="fdb1dacb-f4a2-49a1-a0f3-ba4fdc17ae6f" variableName="challengeRequest"/>
		<referee-process-api:rest-api-challenge doc:name="Rest API Challenge" doc:id="184abccb-62f8-4970-85da-a1b399c088de" config-ref="refereeProcessApiConfig" target="challengeResult">
			<referee-process-api:rest-api-challenge-request-data ><![CDATA[#[vars.challengeRequest]]]></referee-process-api:rest-api-challenge-request-data>
		</referee-process-api:rest-api-challenge>
		<ee:transform doc:name="newRaceState" doc:id="dac61c0d-1d49-4eaa-a33b-2f322a15b40c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Objects

output application/json
---
payload mergeWith {
	time: vars.challengeResult.time
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:store doc:name="raceState" doc:id="f3ca7bd8-2263-45ed-aef8-43267cdb2ced" key='#["raceState.$(payload.raceType).$(payload.racerId)"]' objectStore="practiceObjectStore"/>
		<logger level="DEBUG" doc:name="DEBUG " doc:id="bf0f1c53-dd19-4286-b022-bf0fe51ef218" message="#[payload]" category="race.practice"/>
		<logger level="INFO" doc:name="INFO" doc:id="f63110ef-459c-4f1b-9162-c65614c315c0" message='#[output text/plain --- "Checked practice for $(payload.racerId)"]' category="race.practice"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="dd84121c-68bb-44b0-9d8d-8ebf7ebcddca" type="APP:EXPIRED"/>
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="976b585a-98da-4fd2-ab6d-4a1875a364bf" type="REFEREE-PROCESS-API:BAD_REQUEST">
				<logger level="DEBUG" doc:name="DEBUG" doc:id="0ed2f98d-a896-4666-8d84-3eda7ea0d480" category="race.practice.check.error" message="#[payload]"/>
				<ee:transform doc:name="raceState" doc:id="12b734b4-77c4-4324-bcbb-f73e883ddb86" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Objects

output application/json
---
payload mergeWith {
	downMessage: error.errorMessage.payload.detail default "unknown error"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<os:store doc:name="raceState" doc:id="610623d5-6387-4034-acd8-a9cd1f48f2f4" objectStore="practiceObjectStore" key='#["raceState.$(payload.raceType).$(payload.racerId)"]'/>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
