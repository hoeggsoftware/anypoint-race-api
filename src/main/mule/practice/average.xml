<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:referee-process-api="http://www.mulesoft.org/schema/mule/referee-process-api" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/referee-process-api http://www.mulesoft.org/schema/mule/referee-process-api/current/mule-referee-process-api.xsd">
	<flow name="practice_averages_check" doc:id="f95e5595-0028-4616-87c4-562bb884ddf2" >
		<vm:listener doc:name="practice-averages" doc:id="9df1ba69-ac70-4fd4-93a1-d1694a01c92d" config-ref="VM_Config" queueName="practice-averages"/>
		<set-variable value='#["raceState.$(payload.raceType).$(payload.racerId)"]' doc:name="raceDataKey" doc:id="476adbf3-cb09-411f-a0a9-7a8920580f8b" variableName="raceDataKey" />
		<os:store doc:name="lock" doc:id="8a47d35d-678c-4cb9-943e-6a88225040db" key='#["lock.$(vars.raceDataKey)"]' failIfPresent="true" objectStore="practiceObjectStore">
			<error-mapping sourceType="OS:KEY_ALREADY_EXISTS" targetType="APP:LOCKED" />
			<os:value ><![CDATA[locked]]></os:value>
		</os:store>
		<validation:is-true doc:name="not expired" doc:id="9a14076d-bcfc-437a-867c-049242474f56" expression="#[dw::app::Transforms::practiceExpiration(payload) &gt; now()]" message="expired race">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:EXPIRED" />
		</validation:is-true>
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	endpoint: payload.endpoint,&#10;	racerId: payload.racerId,&#10;	count: payload.scale match {&#10;		case "thousand" -&gt; 1000&#10;		case "million" -&gt; 1000000&#10;		case "billion" -&gt; 1000000000&#10;		else -&gt; 0&#10;	}&#10;}]' doc:name="challengeRequest " doc:id="c0e0933c-6743-49bf-99ab-e7631af2f6be" variableName="challengeRequest" />
		<referee-process-api:billion-row-challenge doc:name="Billion Row Challenge" doc:id="d40e18fc-31da-45f6-af2f-bf72d33031aa" config-ref="refereeProcessApiConfig" target="challengeResult">
			<referee-process-api:billion-row-challenge-request-data ><![CDATA[#[vars.challengeRequest]]]></referee-process-api:billion-row-challenge-request-data>
		</referee-process-api:billion-row-challenge>
		<try doc:name="Try" doc:id="91b45507-fca9-4118-8368-f96db11ec734" >
			<os:remove doc:name="lock" doc:id="ed8ea875-f332-41ee-bcff-000b05ac6df9" objectStore="practiceObjectStore" key='#["lock.$(vars.raceDataKey)"]'>
			<error-mapping sourceType="OS:KEY_NOT_FOUND" targetType="APP:LOCK_MISSING" />
		</os:remove>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="d2184a7e-5c5c-4e94-8834-e060b795a2d1" type="APP:LOCK_MISSING">
					<logger level="WARN" doc:name="WARN" doc:id="e4003f47-cca9-4ff1-bb57-944d6a3009ba" category="race.practice.check" message='#[output text/plain --- "tried to release missing lock for $(vars.raceDataKey)"]'/>
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="newRaceState" doc:id="2253d2fa-dc78-474a-b896-45728e516caa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Objects

output application/json
---
(payload mergeWith {
	time: vars.challengeResult.time
}) - "downMessage"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:store doc:name="raceState" doc:id="374d8919-d0c7-4ddf-bc18-45ea70a88ac9" key="#[vars.raceDataKey]" objectStore="practiceObjectStore" />
		<logger level="DEBUG" doc:name="DEBUG " doc:id="f4298a97-8825-4503-a054-0ee2646ef344" message="#[payload]" category="race.practice" />
		<logger level="INFO" doc:name="INFO" doc:id="68d502db-4038-4f90-a6cb-0a678637c8c9" message='#[output text/plain --- "Checked practice for $(payload.racerId)"]' category="race.practice" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="82c51e61-173e-467e-b45e-08d5667ecb50" type="APP:LOCKED">
				<logger level="INFO" doc:name="INFO" doc:id="229f3dfe-596a-4682-b3fa-ae421a87ba6a" message='#[output text/plain --- "Skipping practice run for $(vars.raceDataKey)"]' category="race.practice.check"/>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="cc6f7202-cc2c-4c34-87db-5c92596ac66f" type="APP:EXPIRED">
				<os:remove doc:name="raceDataKey" doc:id="00f3854c-bcc8-4cbe-8d77-a32c6df8d608" key="#[vars.raceDataKey]" objectStore="practiceObjectStore" />
			</on-error-continue>
			<on-error-propagate enableNotifications="true" logException="false" doc:name="On Error Propagate" doc:id="840759b6-1cb8-40fa-bc7f-7106bd4feafc" type="REFEREE-PROCESS-API:BAD_REQUEST">
				<logger level="DEBUG" doc:name="DEBUG" doc:id="366ca482-7d75-4a00-a665-ed3c33b01496" message="#[payload]" category="race.practice.check.error" />
				<ee:transform doc:name="raceState" doc:id="3cd8ba3c-6a7b-4625-86cc-371a6adf98e3">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Objects

output application/json
---
payload mergeWith {
	downMessage: error.errorMessage.payload.detail default "unknown error"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<os:store doc:name="raceState" doc:id="8b5161b6-fc1a-4368-bd3e-a668a0794416" key="#[vars.raceDataKey]" objectStore="practiceObjectStore" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
