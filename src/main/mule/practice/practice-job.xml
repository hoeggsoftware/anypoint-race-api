<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<sub-flow name="practice_racer_enable" doc:id="3947b723-2c08-49e0-85e5-3cb9cefce1b1" >
		<ee:transform doc:name="raceState" doc:id="8b047c0b-7ee6-4f30-abec-35cf9615d93b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0

output application/json
---
payload ++ {
	raceType: vars.raceType,
	racerId: vars.racerId,
	start: now()
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value='#["raceState.$(payload.raceType).$(payload.racerId)"]' doc:name="raceDataKey" doc:id="2c2bc1d4-9702-4a2b-93d0-65344a486dc4" variableName="raceDataKey" />
		<try doc:name="Try" doc:id="b359bcbb-c53f-4f6f-94bc-1dc2d7e0b422">
			<os:remove doc:name="lock" doc:id="cf02d850-685d-4cc5-b53c-5d878eac6b70" key='#["lock.$(vars.raceDataKey)"]' objectStore="practiceObjectStore">
				<error-mapping sourceType="OS:KEY_NOT_FOUND" targetType="APP:LOCK_MISSING" />
			</os:remove>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="e5d55fa1-5a7b-4ceb-b368-021a87c8ec16" type="APP:LOCK_MISSING">
					<logger level="DEBUG" doc:name="DEBUG" doc:id="d1983acf-d9c4-432a-93a0-6f8cead3cf32" message='#[output text/plain --- "no lock exists for $(vars.raceDataKey)"]' category="race.practice.check" />
				</on-error-continue>
			</error-handler>
		</try>
		<os:store doc:name="raceState" doc:id="c21b2b18-b2fa-4721-baaf-97dcbdcc2a08" key='#[vars.raceDataKey]' objectStore="practiceObjectStore" />
		<ee:transform doc:name="response" doc:id="dde991e8-bb0f-4714-ab1b-735d1db27e0e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
formatPracticeRaceState(payload as RaceState)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="practice_racer_checkStatus" doc:id="81dba380-d3a9-4b6d-b6c3-4de61a38f21e" >
		<try doc:name="Try" doc:id="ee0a5470-11a4-4dc0-b4b3-b62a719763c7" >
			<os:retrieve doc:name="raceState" doc:id="ae914c93-a437-43a6-aab3-ae02b54c6321" key='#["raceState.$(vars.raceType).$(vars.racerId)"]' objectStore="practiceObjectStore" />
			<logger level="DEBUG" doc:name="DEBUG" doc:id="643390b2-9b23-45a6-b9f8-f95080c89a3c" message="#[payload]" category="race.practice.checkstatus"/>
			<ee:transform doc:name="response" doc:id="d0648189-dde2-4868-9661-4c386e9684a9">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
formatPracticeRaceState(payload as RaceState)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="2bfa5706-6353-4a1f-b1e4-502f68883afb" type="OS:KEY_NOT_FOUND">
				<set-variable value="404" doc:name="httpStatus = 404" doc:id="b6f0250d-a1ab-40a3-907f-945487683ece" variableName="httpStatus" />
				<ee:transform doc:name="response" doc:id="e2f92773-e0c5-4e60-8dd3-8e3d413500f2">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::app::Transforms
output application/json
---
formatPracticeRaceState(null)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="WARN" doc:name="WARN" doc:id="37297c3f-7ce6-4e56-940f-34d659b91628" category="race.practice.check" message="Checked missing race state #[vars.racerId]" />
			</on-error-continue>
			</error-handler>
		</try>
	</sub-flow>
	<flow name="practice_checkSchedule" doc:id="cf2a061f-d9b1-4c33-b973-56a344b79d63" >
		<scheduler doc:name="check schedule" doc:id="9245977e-a49b-4f25-85ac-a711799b76e4" >
			<scheduling-strategy >
				<fixed-frequency frequency="30" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</scheduler>
		<os:retrieve-all-keys doc:name="Retrieve all keys" doc:id="c2b4bbd0-23f9-4786-821d-13e9742e9abe" objectStore="practiceObjectStore"/>
		<ee:transform doc:name="raceState filter" doc:id="892aaf46-5489-4214-93d8-ef6287ac93af" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload filter (key) -> key startsWith "raceState."]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="5a2a71d0-c927-4dfc-be1e-d8561883dd9d" >
			<os:retrieve doc:name="raceState" doc:id="dc50fa38-7d0e-4ebc-9a16-f25b75f3a23e" key="#[payload]" objectStore="practiceObjectStore"/>
			<set-variable value="#[payload.raceType as String]" doc:name="raceType" doc:id="458dd15f-50e8-45f5-ad7f-1349d3d0e0b7" variableName="raceType"/>
			<vm:publish doc:name="practice" doc:id="2104b704-5931-46fc-a725-373f1cbd7664" config-ref="VM_Config" queueName='#["practice-$(vars.raceType)"]'/>
		</foreach>
	</flow>

</mule>
